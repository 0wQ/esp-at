stages:
  - build
  - deploy

# global variables
variables: &global-variables
  IDF_PATH: "$CI_PROJECT_DIR/esp-idf"
  GIT_STRATEGY: clone
  PYTHON_VER: 3

.before_build_esp32_series: &before_build_esp32_series
  - cd components/at/private_include
  - rm -f at_ota_token.h
  - echo -e "#pragma once" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_WROOM32 \"$AT_OTA_TOKEN_WROOM32\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_WROOM32 \"$AT_OTA_TOKEN_WROOM32\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_WROVER32 \"$AT_OTA_TOKEN_WROVER32\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_WROVER32 \"$AT_OTA_TOKEN_WROVER32\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32_PICO_D4 \"$AT_OTA_TOKEN_ESP32_PICO_D4\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32_PICO_D4 \"$AT_OTA_TOKEN_ESP32_PICO_D4\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32_SOLO_1 \"$AT_OTA_TOKEN_ESP32_SOLO_1\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32_SOLO_1 \"$AT_OTA_TOKEN_ESP32_SOLO_1\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32_MINI_1 \"$AT_OTA_TOKEN_ESP32_MINI_1\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32_MINI_1 \"$AT_OTA_TOKEN_ESP32_MINI_1\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32_QCLOUD \"$AT_OTA_TOKEN_ESP32_QCLOUD\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32_QCLOUD \"$AT_OTA_TOKEN_ESP32_QCLOUD\"" >> at_ota_token.h
  - cd -
  # (the same regular expressions are used to set these are used in 'only:' sections below
  - source ./esp-idf/tools/ci/setup_python.sh
  - source ./esp-idf/tools/ci/configure_ci_environment.sh
  - ./esp-idf/tools/idf_tools.py --non-interactive install && eval "$(./esp-idf/tools/idf_tools.py --non-interactive export)" || exit 1
  # fetch the submodules (& if necessary re-fetch repo) from gitlab
  - time ./esp-idf/tools/ci/get-full-sources.sh

.before_build_esp32c3_series: &before_build_esp32c3_series
  - cd components/at/private_include
  - rm -f at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32C3_MINI \"$AT_OTA_TOKEN_ESP32C3_MINI\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32C3_MINI \"$AT_OTA_TOKEN_ESP32C3_MINI\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32C3_MINI_QCLOUD \"$AT_OTA_TOKEN_ESP32C3_MINI_QCLOUD\"" >> at_ota_token.h
  - echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32C3_MINI_QCLOUD \"$AT_OTA_TOKEN_ESP32C3_MINI_QCLOUD\"" >> at_ota_token.h
  - cd -
  # (the same regular expressions are used to set these are used in 'only:' sections below
  - source ./esp-idf/tools/ci/setup_python.sh
  - source ./esp-idf/tools/ci/configure_ci_environment.sh
  - ./esp-idf/tools/idf_tools.py --non-interactive install && eval "$(./esp-idf/tools/idf_tools.py --non-interactive export)" || exit 1
  # fetch the submodules (& if necessary re-fetch repo) from gitlab
  - time ./esp-idf/tools/ci/get-full-sources.sh

esp32_wroom_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32_default/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROOM-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROOM-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32_wrover_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_wrover-32/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 1}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 1}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32_pico_d4_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32_default/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"PICO-D4\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"PICO-D4\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build


esp32_solo_1_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32_default/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"SOLO-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"SOLO-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32-d2wd_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32-d2wd/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"ESP32-D2WD\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"ESP32-D2WD\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32_mini_1_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32_default/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"MINI-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"MINI-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32_qcloud:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables

  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32_qcloud/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"ESP32_QCLOUD\", \"description\": \"QCLOUD TX:17 RX:16\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"ESP32_QCLOUD\", \"description\": \"QCLOUD TX:17 RX:16\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32c3_mini_1_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables

  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32c3_default/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32C3\", \"module\": \"MINI-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32C3\", \"module\": \"MINI-1\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32c3_series
    - ./build.py build

esp32c3_qcloud:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables

  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_esp32c3_qcloud/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32C3\", \"module\": \"ESP32C3_QCLOUD\", \"description\": \"QCLOUD TX:7 RX:6\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32C3\", \"module\": \"ESP32C3_QCLOUD\", \"description\": \"QCLOUD TX:7 RX:6\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32c3_series
    - ./build.py build

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v.*$/
  tags:
    - deploy
  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp-at.git
    # - git push --follow-tags github HEAD:master
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_COMMIT_SHA == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)


esp32_demo:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git submodule update --init --recursive

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - commit_str=$(awk '/commit:/{print $0}' module_config/module_esp32_default/IDF_VERSION)
    - branch_str=$(awk '/branch:/{print $0}' module_config/module_esp32_default/IDF_VERSION)
    - git clone -b ${branch_str#*branch:} ${GITLAB_SSH_SERVER}/espressif/esp-idf.git
    - cd esp-idf
    - git checkout ${commit_str#*commit:}
    # (the same regular expressions are used to set these are used in 'only:' sections below
    - source ./tools/ci/configure_ci_environment.sh
    - tools/idf_tools.py --non-interactive install && eval "$(tools/idf_tools.py --non-interactive export)" || exit 1
    # fetch the submodules (& if necessary re-fetch repo) from gitlab
    - time ./tools/ci/get-full-sources.sh
    - git submodule update --init
    - cd -

    - cd examples/at_sdio_host/ESP32
    - idf.py build
    - cd -

    - cd examples/at_spi_master/sdspi/ESP32
    - idf.py build
    - cd -

wrover32_all_function_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git submodule update --init --recursive

  script:
    - echo -e "CONFIG_AT_FS_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_ETHERNET_SUPPORT=n" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_EAP_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_DRIVER_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_BT_A2DP_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_BLUFI_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_WEB_SERVER_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_WEB_CAPTIVE_PORTAL_ENABLE=y" >> module_config/module_wrover-32/sdkconfig.defaults

    - sed -i '/ota_1/d' module_config/module_wrover-32/partitions_at.csv
    - old_size_str=`cat module_config/module_wrover-32/partitions_at.csv | grep ota_0 | awk -F, '{print $5}'`
    - let old_value=$old_size_str
    - new_value=`expr $old_value + $old_value`
    - new_size_str=`printf "0x%x" ${new_value}`
    - sed -i '/ota_0/s/'$old_size_str'/'$new_size_str'/g' module_config/module_wrover-32/partitions_at.csv

    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_wrover-32/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

esp32_ethernet_at:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build

  variables:
    <<: *global-variables
    
  artifacts:
    paths:
      - sdkconfig
      - build/*.bin
      - build/*.elf
      - build/*.map
      - build/bootloader/*.bin
      - build/partition_table/*.bin
      - build/customized_partitions/*.bin
      - build/flasher_args.json
      - build/download.config
      - build/factory/*
    expire_in: 6 mos

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git submodule update --init --recursive

  script:
    - echo -e "CONFIG_AT_FS_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_ETHERNET_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults
    - echo -e "CONFIG_AT_EAP_COMMAND_SUPPORT=y" >> module_config/module_wrover-32/sdkconfig.defaults

    - sed -i '/ota_1/d' module_config/module_wrover-32/partitions_at.csv
    - old_size_str=`cat module_config/module_wrover-32/partitions_at.csv | grep ota_0 | awk -F, '{print $5}'`
    - let old_value=$old_size_str
    - new_value=`expr $old_value + $old_value`
    - new_size_str=`printf "0x%x" ${new_value}`
    - sed -i '/ota_0/s/'$old_size_str'/'$new_size_str'/g' module_config/module_wrover-32/partitions_at.csv

    # replace submodule esp-idf to internal repository to speedup cloning
    - sed -i "s?https://github.com?$GITLAB_SSH_SERVER?g" module_config/module_wrover-32/IDF_VERSION
    - mkdir build
    # create module info
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - rm -rf build && mkdir build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - *before_build_esp32_series
    - ./build.py build

build_docs:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp-at-doc-env:1
  tags:
    - build_docs
  artifacts:
    when: always
    paths:
      # English version of documentation
      - docs/en/doxygen-warning-log.txt
      - docs/en/sphinx-warning-log.txt
      - docs/en/sphinx-warning-log-sanitized.txt
      - docs/en/_build/html
      - docs/sphinx-err-*
      # Chinese version of documentation
      - docs/zh_CN/doxygen-warning-log.txt
      - docs/zh_CN/sphinx-warning-log.txt
      - docs/zh_CN/sphinx-warning-log-sanitized.txt
      - docs/zh_CN/_build/html
    expire_in: 4 days
  only:
    variables:
      - $BOT_TRIGGER_WITH_LABEL == null
      - $BOT_LABEL_BUILD
      - $BOT_LABEL_BUILD_DOCS
      - $BOT_LABEL_REGULAR_TEST
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

  script:
    # replace submodule esp-idf to internal repository to speedup cloning
    - commit_str=$(awk '/commit:/{print $0}' module_config/module_esp32_default/IDF_VERSION)
    - branch_str=$(awk '/branch:/{print $0}' module_config/module_esp32_default/IDF_VERSION)
    - git clone -b ${branch_str#*branch:} ${GITLAB_SSH_SERVER}/espressif/esp-idf.git
    - cd esp-idf
    - git checkout ${commit_str#*commit:}
    # (the same regular expressions are used to set these are used in 'only:' sections below
    - source ./tools/ci/configure_ci_environment.sh
    - tools/idf_tools.py --non-interactive install && eval "$(tools/idf_tools.py --non-interactive export)" || exit 1
    # fetch the submodules (& if necessary re-fetch repo) from gitlab
    - time ./tools/ci/get-full-sources.sh
    - git submodule update --init
    - cd -

    # - export IDF_PATH=$(pwd)/esp-idf
    # - make defconfig
    - mkdir -p build
    - 'echo -e "{\"platform\": \"PLATFORM_ESP32\", \"module\": \"WROVER-32\", \"description\": \"\",\"silence\": 0}" > build/module_info.json'
    - ./build.py reconfigure || echo "skip exception"
    - export IDF_PATH=$(pwd)/esp-idf
    - export ESP_AT_PROJECT_PATH=$(pwd)

    # - ln -s $(IDF_PATH)/tools tools
    - cd docs
    - ./check_lang_folder_sync.sh
    - cd en
    # - make gh-linkcheck
    - make html
    - ../check_doc_warnings.sh
    - cd ../zh_CN
    # - make gh-linkcheck
    - make html
    - ../check_doc_warnings.sh
    
